spring:
  application:
    name: backend
  config:
    import: optional:application-secret.yml
  datasource:
    url: jdbc:postgresql://localhost:5432/sprout_db
    username: ${db.username}
    password: ${db.password}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: localhost
      port: 6379
  flyway:
    enabled: true # Flyway 활성화
    locations: classpath:db/migration # 마이그레이션 스크립트 위치
    baseline-on-migrate: true # 기존 데이터베이스에 Flyway 메타 테이블이 없을 경우, 현재 스키마를 baseline으로 설정하고 마이그레이션 시작
jwt:
  secret: ${jwt.secret}
  access-expiration: ${jwt.expiration-ms}
  refresh-expiration: ${jwt.refresh-expiration-ms}
openai:
  model: text-embedding-3-small
  secret-key: ${openai.secret-key}

---

# Kafka 프로파일 설정

spring:
  config:
    activate:
      on-profile: kafka
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: chloe.sprout.backend.kafka
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

---

# Sqs 프로파일 설정

spring:
  config:
    activate:
      on-profile: sqs
  cloud:
    aws:
      region:
        static: ap-northeast-2
      credentials:
        secret-key: ${sqs.secret-key}
        access-key: ${sqs.access-key}